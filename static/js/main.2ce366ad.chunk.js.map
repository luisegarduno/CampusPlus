{"version":3,"sources":["Api/assignmentRepository.js","app/Header.jsx","models/Assignment.js","app/AssignmentDashboard.jsx","Api/userRepository.js","app/login/Register.jsx","images/logo2.png","app/WelcomePage.jsx","models/User.js","app/Profile.jsx","app/EditProfile.jsx","app/Home.jsx","app/Calendar.jsx","models/Course.js","Api/classesRepository.js","app/CourseDashboard.jsx","app/AssignmentEditor.jsx","app/CourseSearch.jsx","app/ArchivedAssignments.jsx","app/ArchivedCourses.jsx","app/CalendarDaily.jsx","app/ViewCourse.jsx","app/GuestHome.jsx","app/CourseList.jsx","app/ForumDashboard.jsx","app/CommentList.jsx","app/ForumCommentForm.jsx","Api/commentRepository.js","app/CourseAndComments.jsx","app/AddAssignments.jsx","app/CourseSearchResults.jsx","app/AboutUs.jsx","app/GuestAboutUs.jsx","App.jsx","index.js"],"names":["AssignmentRepository","url","assignmentID","Promise","resolve","reject","axios","get","then","x","data","catch","alert","userID","courseID","assignmentType","completionStatus","assignmentData","post","name","put","description","dueDate","body","delete","config","Header","className","href","role","React","Component","Assignment","this","AssignmentDashboard","props","username","localStorage","state","assignments","sortDirection","assignmentRepo","formatDate","bind","displayAssignments","getAssignments","console","log","getAss","res","forEach","ele","setState","field","_","orderBy","myDate","date","String","substring","id","history","push","pathname","type","onClick","sortBy","map","storeID","UserRepository","loginData","params","profileData","email","Register","login","password","confirmPassword","school","major","status","getEmail","getUsername","getPassword","getConfirmPassword","getSchool","getMajor","onRegister","emailAddress","target","value","setItem","pass1","pass2","document","getElementById","sha256","storeInfo","userDetailsBody","getUserID","uid","htmlFor","onChange","autoComplete","placeholder","for","to","WelcomePage","onLogin","validLogin","invalidLogin","verifyUser","response","user","val","pass","reset","src","logo","alt","User","isAdmin","grade","gradDate","Profile","userInfo","gradYear","userData","loadUser","userDetailsParam","readOnly","EditProfile","updateCreds","updateEmail","updateProfile","e","updateProf","Home","Calendar","month","year","returnDate","ProductRepo","day","findDay","d","Date","getMonth","getFullYear","selected","getDate","prevMonth","nextMonth","findAssignments","Course","courseDaysID","yearOffered","seasonOffered","courseTimeStart","courseTimeEnd","instructor","ClassesRepository","CourseDashboard","courses","coursesRepo","formatTime","formatSemester","getStudentSchedule","myTime","timeValue","time","split","hours","Number","minutes","semester","scope","AssignmentEditor","api","deleteAssignment","location","loadDash","assignmentDescription","courseDescription","updateAssignment","updateCompletion","defaultValue","editAssignment","markCompleted","CourseSearch","courseName","courseTime","courseRepo","getCourseList","showResults","search","ArchivedAssignments","archieve","ArchivedCourses","CalendarDaily","newDate","ViewCourse","courseDetails","descriptions","backup","getCourses","getAssignmentsClass","y","class","GuestHome","CourseList","ForumDashboard","CommentList","reviews","length","title","commentID","ForumCommentForm","addReview","prod","Comment","onReviewAdded","CommentRepository","CourseAndComments","match","commentRepo","getClassComments","addClassComment","AssignmentAdder","assignment","createAssignment","CourseSearchResults","AboutUs","GuestAboutUs","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ce366ad.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport class AssignmentRepository {\n\n    // Leave this here\n    url = false ? 'http://44.233.149.216:8000' : 'http://localhost:8000';\n\n    // GET returns specified assignment : http://localhost:8000/assignment/:assignmentID\n    getAssignment(assignmentID){\n        return new Promise((resolve,reject) => {\n            axios.get(`${this.url}/assignment/${assignmentID}`)\n                .then(x => {\n                resolve(x.data);\n            })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // GET all assignments for a user : http://localhost:8000/assignment/user/:userID\n    getAssignments(userID) {\n        return new Promise((resolve,reject) => {\n            axios.get(`${this.url}/assignment/user/${userID}`)\n                .then(x => {\n                resolve(x.data);\n            })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // GET all of a user's assignments for a given class : http://localhost:8000/assignment/:userID/class/:courseID\n    getAssignmentsClass(userID,courseID) {\n        return new Promise((resolve,reject) => {\n            axios.get(`${this.url}/assignment/${userID}/class/${courseID}`)\n                .then(x => {\n                resolve(x.data);\n            })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // GET all of a user's assignments for a given type : http://localhost:8000/assignment/:userID/type/:assignmentType\n    getAssignmentsTypes(userID,assignmentType) {\n        return new Promise((resolve,reject) => {\n            axios.get(`${this.url}/assignment/${userID}/type/${assignmentType}`)\n                .then(x => {\n                resolve(x.data);\n            })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // GET all of a user's assignments for a given type : http://localhost:8000/assignment/:userID/completion/:completionStatus\n    getAssignmentsStatus(userID, completionStatus) {\n        return new Promise((resolve,reject) => {\n            axios.get(`${this.url}/assignment/${userID}/completion/${completionStatus}`)\n                .then(x => {\n                resolve(x.data);\n            })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n\n    // POST Create new assignment : http://localhost:8000/assignment/:userID/:courseID\n    createAssignment(userID, assignmentData){\n        return new Promise((resolve,reject) =>{\n            axios.post(`${this.url}/assignment/${userID}`, assignmentData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n\n    // PUT Change name of the assignment : http://localhost:8000/assignment/:assignmentID/name\n    updateName(assignmentID, name){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/assignment/${assignmentID}/name`, name)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // PUT Change description of the assignment : http://localhost:8000/assignment/:assignmentID/description\n    updateDescription(assignmentID, description){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/assignment/${assignmentID}/desc`, description)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // PUT Change due date of the assignment : http://localhost:8000/assignment/:assignmentID/date\n    updateDate(assignmentID, dueDate){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/assignment/${assignmentID}/date`, dueDate)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // PUT Change the assignment type : http://localhost:8000/assignment/:assignmentID/type\n    updateType(assignmentID, assignmentType){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/assignment/${assignmentID}/type`, assignmentType)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n\n    // PUT Mark assignment as complete/incomplete : http://localhost:8000/assignment/:assignmentID/completion\n    updateCompletion(assignmentID, completionStatus){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/assignment/${assignmentID}/completion`, completionStatus)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // PUT updates assignment depending on assignmentID : http://localhost:8000/assignment/:assignmentID\n    updateAssignment(assignmentID, body){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/assignment/${assignmentID}`, body)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // DELETE deletes assignment depending on assignmentID : http://localhost:8000/assignment/:assignmentID\n    deleteAssignment(assignmentID) {\n            return new Promise((resolve, reject) => {\n                axios.delete(`${this.url}/assignment/${assignmentID}`, this.config)\n                    .then(x => resolve(x.data))\n                        alert(\"Assignment has been deleted\")\n            });\n    }\n}","import React from 'react';\n//import { Link } from 'react-router-dom';\n//import {BrowserRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\n\nexport class Header extends React.Component{\n\n    render() {\n        return(<>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark justify-content-between\">\n                <ul className=\"navbar-nav justify-content-start\">\n                    <li className=\"nav-item nav-link\">\n                        <a href=\"/home\" className=\"mb-0 h4 text-white font-weight-bold\">Campus</a>\n                        <a href=\"/home\" className=\"mb-0 h4 text-primary font-weight-bold\">Plus</a>\n                    </li>\n                </ul>\n                    <a href=\"/login\" className=\"btn btn-primary btn-sm rounded justify-content-end\" role=\"button\" aria-pressed=\"true\">LOG OUT</a>      \n            </nav>\n        </>)\n    }\n}\n","export class Assignment {\n    constructor(assignmentID, courseID, description, dueDate, assignmentType, completionStatus, name, userID) {\n        this.assignmentID = assignmentID;\n        this.courseID = courseID;\n        this.description = description;\n        this.dueDate = dueDate;\n        this.assignmentType = assignmentType;\n        this.userID = userID;\n        this.completionStatus = completionStatus;\n        this.name = name;\n    }\n}\n","import React from 'react'\n//import { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\nimport { AssignmentRepository } from '../Api/assignmentRepository';\nimport { Header } from './Header';\nimport { Assignment } from '../models/Assignment';\nimport _ from 'lodash';\n\n\nexport class AssignmentDashboard extends React.Component {\n\n    username;\n\n    constructor(props){\n\n        super(props);\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n\n        this.state = {\n            assignments: [],\n            sortDirection : 'asc',\n            userID: '',\n        };\n\n        this.assignmentRepo = new AssignmentRepository();\n        this.formatDate = this.formatDate.bind(this);\n        this.displayAssignments();\n\n    }//end state\n\n    async getAss(){\n        //window.location.reload(false);\n        return await this.assignmentRepo.getAssignments(this.userID)\n       \n    }\n\n\n    displayAssignments(){\n       \n        console.log(\"loaded\");\n        this.getAss()\n        .then(res => {\n            console.log(res)\n            res.data.forEach(ele => {\n                if(ele.completionStatus === 0){\n                this.setState({assignments:[...this.state.assignments, new Assignment(ele.assignmentID, ele.courseID, ele.description, ele.dueDate, ele.assignmentType, ele.completionStatus, ele.name, ele.userID)]});\n                \n          }\n        });\n     \n        console.log(this.state);\n            })\n            .catch(res => console.log(res));\n    }\n\n    sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({assignments: _.orderBy(this.state.assignments, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({assignments: _.orderBy(this.state.assignments, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n    storeID(id){\n        this.props.history.push({\n            pathname: `/assignment/${id}`,\n            state: {assignmentID: id}\n        });\n        \n\n    }\n    \n\n    render() {\n        return(<>\n                <Header />\n                <nav className=\"navbar bg-white\">\n                    <span className=\"mb-0 h5 text-primary\">Assignments</span>\n                </nav>\n                <div className=\"p-5 container-fluid container-md\">\n                    <h2 className=\"p-3 text-center text-dark font-weight-bold\">Current Assignments</h2>\n                <div id=\"content\">\n\n                <div className = \"p-2 text-center mx-auto assignmentsTable w-auto table-responsive-md tableSort\">\n                <table className=\"table table-striped\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                        \n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'name')}>Assignment</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'courseID')}>Course</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'assignmentType')}>Assignment Type</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'dueDate')}>Due Date</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'description')}>Description</button></th>\n                            <th>Edit</th>\n                            \n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.state.assignments.map((x) =>\n                        <tr key = {x.assignmentID}>\n                            <td>{x.name}</td>\n                            <td>{x.courseID}</td>\n                            <td>{x.assignmentType}</td>\n                            <td>{this.formatDate(x.dueDate)}</td>\n                            <td>{x.description}</td>\n                            <td><button type=\"button\" className=\"btn-floating yellow darken-1 rounded\" onClick={() => this.storeID(x.assignmentID)}><i className=\"fas fa-pencil-alt\"></i></button></td>\n                            </tr>)}\n\n                        <tr>\n                           {/* <button type=\"button\" className=\"btn btn-primary rounded float-right\">Edit</button> */}\n                        </tr>\n                    </tbody>\n                </table>\n                <button className=\"btn btn-primary rounded\" onClick={() => this.props.history.push(\"/add\")}>Add Assignment</button>\n             \n            </div>\n            </div>\n            </div>\n            \n          </>\n        )\n      }\n}//end AssignmentDashboard\n","import axios from 'axios'\n\nexport class UserRepository {\n\n    // Leave this here\n    url = false ? 'http://44.233.149.216:8000' : 'http://localhost:8000';\n    \n    // POST Create User : http://localhost:8000/user/create\n    registerUser(loginData){\n        return new Promise((resolve,reject) =>{\n            axios.post(`${this.url}/user/create`, loginData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // POST Verify User : http://localhost:8000/user/login\n    verifyUser(loginData){\n        return new Promise((resolve,reject) =>{\n            axios.post(`${this.url}/user/login`, loginData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // GET Returns all information depending on username (passed into the BODY) : http://localhost:8000/user/\n    userDetailsBody(username){\n        return new Promise((resolve,reject) =>{\n            axios.get(`${this.url}/user/`, {params: username})\n                .then(x => {\n                    console.log(x);\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // GET Returns all information depending on userID (passed as request parameter): http://localhost:8000/user/:userID\n    userDetailsParam(userID){\n        return new Promise((resolve,reject) =>{\n            axios.get(`${this.url}/user/${userID}`)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // PUT update username + password : http://localhost:8000/user/\n    updateCreds(loginData){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/user/`, loginData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // PUT update profile : http://localhost:8000/user/:userID/updateProfile\n    // profileData = grade, school, major, gradDate\n    updateProfile(userID, profileData){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/user/${userID}/updateProfile`, profileData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // PUT update Email : http://localhost:8000/user/:userID/updateEmail\n    updateEmail(userID, email){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/user/${userID}/updateEmail`, email)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // DELETE deletes user depending on userID : http://localhost:8000/user/:userID\n    deleteUser(userID) {\n            return new Promise((resolve, reject) => {\n                axios.delete(`${this.url}/user/${userID}`, this.config)\n                    .then(x => resolve(x.data))\n                        alert(\"User has been deleted\")\n            });\n    }\n    \n}","import React from \"react\";\nimport axios from 'axios';\nimport { sha256 } from 'js-sha256'\nimport { UserRepository } from '../../Api/userRepository'\nimport { Redirect } from \"react-router-dom\";\n\nexport class Register extends React.Component{\n\n    login = new UserRepository()\n    config = {\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            school: \"\",\n            major: \"\",\n            status: \"\",\n        };\n\n        this.getEmail = this.getEmail.bind(this);\n        this.getUsername = this.getUsername.bind(this);\n        this.getPassword = this.getPassword.bind(this);\n        this.getConfirmPassword = this.getConfirmPassword.bind(this);\n        this.getSchool = this.getSchool.bind(this);\n        this.getMajor = this.getMajor.bind(this);\n        this.onRegister = this.onRegister.bind(this);\n    }\n\n    getEmail(emailAddress){\n        this.setState({ email : emailAddress.target.value })\n    }\n\n    getUsername(name){\n        this.setState({ username : name.target.value })\n        localStorage.setItem('username', this.state.username);\n    }\n\n    getPassword(pass1){\n        this.setState({ password : pass1.target.value })\n    }\n\n    getConfirmPassword(pass2){\n        this.setState({ confirmPassword : pass2.target.value })\n    }\n\n    getSchool(school){\n        this.setState({ school : school.target.value })\n    }\n    getMajor(major){\n        this.setState({ major : major.target.value })\n    }\n\n    onRegister(){\n        const { password, confirmPassword } = this.state;\n\n        if(password !== confirmPassword){\n            alert(\"Passwords do not match\");\n\n            this.setState({ status : false });\n            document.getElementById(\"passwordV1\").value = \"\";\n            document.getElementById(\"passwordV2\").value = \"\";\n        }\n        else{\n            this.setState({ status : true })\n\n            let password = this.state.password;\n            password = sha256(password);\n            var loginData = {email : this.state.email, password: password, username : this.state.username, school : this.state.school, major: this.state.major }\n            //console.log(this.login.registerUser(loginData))\n        \n            //axios.post(`${this.url}/user/create`, loginData)\n            //    .then(response => {\n            //        if(response.data !== 1 && response.data === false) {\n            //            this.invalidLogin()\n            //        }\n            //        else {\n            //            console.log(response.data)\n            //            this.validLogin(response.data)\n            //        }\n            //})\n\n            axios.post(`${this.login.url}/user/create`, loginData)\n                .then(x => { this.storeInfo(this.state.username);\n            })\n            \n\n        }\n    }\n\n    async getUserID(username) {\n        return (await this.login.userDetailsBody({username}))[0];\n    }\n\n    async storeInfo(name) {\n        localStorage.setItem('username', name);\n        var uid = (await this.getUserID(name)).userID;\n        console.log(uid);\n        localStorage.setItem('userID', uid);\n        this.setState({status : true})\n    }\n\n\n    render() {\n        return(<>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n                <span className=\"mb-0 h3 text-white font-weight-bold\">Campus</span>\n                <span className=\"mb-0 h3 text-primary font-weight-bold\">Plus</span>\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\n                    <form className=\"form-inline \">\n                        <button className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/login\")}>Return</button>\n                    </form>\n                </div>\n            </nav>\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Register</span>\n            </nav>\n            <div className=\"p-3 container-fluid container-sm\">\n                <div className = \"card text-center mb-1 w-75 mx-auto\">\n                    <div className = \"jumbotron-fluid h-75 bg-primary text-white text-center\">\n                        <h4 className=\"p-4 card-title font-weight-bold\">Register</h4>\n                    </div>\n                    <div className = \"form-group\">\n                    <div className = \"card-body\">\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"exampleFormControlInput1\">Student Email</label>\n                                    <div className = \"email\" onChange = {this.getEmail}>\n                                        <input name=\"email\" type=\"email\" autoComplete=\"on\" className=\"form-control mx-auto\" placeholder=\"JDoe@uni.edu\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"exampleFormControlInput1\">Username</label>\n                                    <div className = \"username\" onChange = {this.getUsername}>\n                                        <input name=\"username\" type=\"text\" className=\"form-control mx-auto\" placeholder=\"JDoe\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"exampleFormControlInput1\">Password</label>\n                                    <div className = \"password\" onChange = {this.getPassword}>\n                                        <input id=\"passwordV1\" autoComplete=\"current-password\" name=\"password\" type=\"password\" className=\"form-control mx-auto\" placeholder=\"SecretCode\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label for=\"exampleFormControlInput1\">Confirm Password</label>\n                                    <div className = \"password\" onChange = {this.getConfirmPassword}>\n                                        <input id=\"passwordV2\" autoComplete=\"current-password\" name=\"confirmPassword\" type=\"password\" className=\"form-control mx-auto\" placeholder=\"SecretCode\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label for=\"exampleFormControlInput1\">School</label>\n                                    <div className = \"school\" onChange = {this.getSchool}>\n                                        <input name=\"school\" type=\"text\" className=\"form-control mx-auto\" placeholder=\"Southern Methodist University\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label for=\"exampleFormControlInput1\">Major</label>\n                                    <div className = \"major\" onChange = {this.getMajor}>\n                                        <input name=\"major\" type=\"text\" className=\"form-control mx-auto\" placeholder=\"Computer Science\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"footer\">\n                        {(() => {\n                            if(this.state.email && this.state.username && this.state.password && this.state.confirmPassword){\n                                return <div>\n                                    <button type=\"button\" className=\"btn btn-primary rounded\" onClick={this.onRegister}>Complete Registration</button>\n                                    { this.state.status ? <Redirect to={\"/home\"}/> : <Redirect to={\"/register\"} /> }\n                                </div>\n                            }\n                            else\n                                return <button className=\"btn btn-primary rounded button disabled\" type=\"button\" >Register</button>    \n                        })()}\n                    {/* <button className=\"btn btn-primary rounded\" onClick={() => this.props.history.push(\"/homepages\")}>Complete Registration</button> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )}\n}\n","export default __webpack_public_path__ + \"static/media/logo2.6d09a66f.png\";","import React from 'react';\nimport axios from 'axios'\nimport { sha256 } from 'js-sha256';\nimport logo from \"../images/logo2.png\"\n//import { Profile } from './Profile';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { UserRepository } from '../Api/userRepository';\n\nexport class WelcomePage extends React.Component {\n\n    login = new UserRepository();\n\n    constructor(props){\n        localStorage.setItem('username', null)\n        localStorage.setItem('userID', null)\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            status: \"\",\n        };\n\n        this.onLogin = this.onLogin.bind(this)\n        this.getUsername = this.getUsername.bind(this)\n        this.getPassword = this.getPassword.bind(this)\n        this.validLogin = this.validLogin.bind(this)\n        this.invalidLogin = this.invalidLogin.bind(this)\n    }\n    \n    onLogin() {\n        let password = this.state.password\n        password = sha256(this.state.password);\n\n        console.log(this.login.verifyUser({username: this.state.username, password : password}))\n        \n        axios.post(`${this.login.url}/user/login`, {username: this.state.username, password : password})\n            .then(response => {\n                if(response.data === 0) {\n                    this.invalidLogin()\n                }\n                else {\n                    console.log(response.data)\n                    this.validLogin(response.data)\n                }\n        })\n    }\n    \n    getUsername(user) {\n        var val = user.target.value;\n        this.setState({username : val});\n    }\n\n    getPassword(pass) {\n        var val = pass.target.value;\n        this.setState({password : val});\n    }\n\n    async getUserID(username) {\n        return (await this.login.userDetailsBody({username}))[0];\n    }\n    \n    async validLogin(name) {\n        localStorage.setItem('username', name);\n        var uid = (await this.getUserID(name)).userID;\n        console.log(uid);\n        localStorage.setItem('userID', uid);\n        this.setState({status : true})\n    }\n\n    invalidLogin() {\n        alert(\"Wrong Username/Password\");\n        this.setState({status : false})\n        document.getElementById(\"loginInfo\").reset();\n    }\n\n    newAccount(){\n        this.props.history.push(\"/NewAccount\")\n    }\n\n    render() {\n        return( <>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n                <span className=\"mb-0 h4 text-white font-weight-bold\">Campus</span>\n                <span className=\"mb-0 h4 text-primary font-weight-bold\">Plus</span>\n            </nav>\n        \n          <div className=\"p-4 container-fluid container-sm\">\n                <div className = \"p-1 card mb-1 w-75 mx-auto text-center\">\n                    <div className = \"form-group\">\n                        <img src={logo} alt=\"logo\" className=\"img-rounded img-fluid\" id = \"image\" />\n\n                    <div className = \"card-body\">\n                        <form id=\"loginInfo\">\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"exampleFormControlInput1\">Username</label>\n                                    <div className = \"username\" onChange={this.getUsername}>\n                                        <input autoComplete=\"on\" type=\"text\" className=\"form-control mx-auto\" name=\"username\" placeholder=\"StarStudent\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"exampleFormControlInput1\">Password</label>\n                                    <div className = \"password\" onChange={this.getPassword}>\n                                        <input autoComplete=\"current-password\" type=\"password\" className=\"form-control mx-auto\" name=\"password\" placeholder=\"Password\"></input>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"footer\">\n\n                        {(() => {\n                            if(this.state.password){\n                                return <div>\n                                    <button className=\"btn btn-primary rounded\" onClick={this.onLogin}>Log In</button>\n                                    { this.state.status ? <Redirect to={\"/home\"}/> : <Redirect to={\"/\"} /> }\n                                </div>\n                            }\n                            else\n                                return <button className=\"btn btn-primary rounded button disabled\" type=\"button\" >Log In</button>\n                        })()}\n                        <p></p>\n                        <p>OR</p>\n\n                        <Link to=\"/register\">\n                            <button className=\"btn btn-dark rounded\">Create Account</button>\n                        </Link>\n                    </div>\n                </div>\n                <Link to=\"/guest\">\n                    <button type=\"button\" className=\"btn btn-link text-dark\">Continue As Guest</button>\n                </Link>\n            </div>\n        </div>\n        </>\n        );\n    }\n}\n","export class User {\n    constructor(userID, username, email, isAdmin, password, grade, school, major, gradDate) {\n        this.userID = userID;\n        this.username = username;\n        this.email = email;\n        this.isAdmin = isAdmin;\n        this.password = password;\n        this.grade = grade;\n        this.school = school;\n        this.major = major;\n        this.gradDate = gradDate;\n    }\n}","import React from 'react';\nimport { Header } from './Header';\nimport { User } from '../models/User'\nimport { UserRepository } from '../Api/userRepository'\n\nexport class Profile extends React.Component {\n\n\n    constructor(props){\n        super(props);\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n\n        this.state = {\n            userInfo: [],\n            userID: this.userID,\n            username: this.username,\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            school: \"\",\n            major: \"\",\n            grade: \"\",\n            gradYear: \"\",\n            status: \"\"\n        };\n\n        this.userData = new UserRepository();\n        this.loadUser();\n    };\n\n    loadUser(){\n        this.userData.userDetailsParam(this.userID)\n        .then(res => {\n            console.log(res)\n            res.data.forEach(ele => {\n                this.setState({userInfo:[...this.state.userInfo, new User(ele.userID, ele.username, ele.email, ele.isAdmin, ele.password, ele.grade, ele.school, ele.major, ele.name, ele.gradDate)]});\n                \n            });\n            console.log(this.state);\n        })\n        .catch(res => console.log(res));\n    };\n\n    render(){\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Edit Profile</span>\n            </nav>\n            <div className = \"p-3 container-fluid container-sm\">\n                <div className=\"card mb-1 w-75 mx-auto\">\n                    <div className = \"p-1 jumbotron jumbotron-fluid bg-light text-center\">\n                        <img src=\"/profileIcon.png\" className=\" img-fluid w-25 rounded mx-auto d-block\" alt=\"...\"/>\n                    </div>\n                    <form className = \"p-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" className=\"form-control\" id=\"username\" value={this.state.username} readOnly/>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\" className=\"form-control\" id=\"password\" value={this.state.password} readOnly/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"confirmPassword\">Password Confirmation</label>\n                                <input type=\"password\" className=\"form-control\" id=\"confirmPassword\" readOnly/>\n                            </div>\n                        </div>\n                         <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"\" value={this.state.email} readOnly/>\n                        </div>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"inputSchool\">School</label>\n                            <input type=\"text\" className=\"form-control\" id=\"inputSchool\" value={this.state.school} readOnly/>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-5\">\n                                <label htmlFor=\"inputMajor\">Major</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputMajor\" value={this.state.major} readOnly/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputGrade\">Grade</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputGrade\" value={this.state.grade} readOnly/>\n                            </div>\n                            <div className=\"form-group col-md-3\">\n                                <label htmlFor=\"gradYear\">Grad Year</label>\n                                <input type=\"date\" id=\"gradYear\" className=\"form-control\" value={this.state.gradYear} readOnly />\n                            </div>\n                        </div>\n                        <div className = \"text-center\">\n                            <button type=\"button\" className=\"btn btn-primary btn-md\" onClick={() => this.props.history.push(\"/home\")}>Home</button>\n                            <button type=\"button\" className=\"btn btn-primary btn-md\" onClick={() => this.props.history.push(\"/profile/edit\")}>Edit</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>);\n    }\n}\n","import React from 'react';\nimport { sha256 } from 'js-sha256'\nimport { Header } from './Header';\nimport { User } from '../models/User'\nimport { UserRepository } from '../Api/userRepository'\n\nexport class EditProfile extends React.Component {\n\n\n    constructor(props){\n        super(props);\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n\n        this.state = {\n            userInfo: [],\n            userID: this.userID,\n            username: this.username,\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            school: \"\",\n            major: \"\",\n            grade: \"\",\n            gradDate: \"\",\n            status: \"\"\n        };\n\n        this.userData = new UserRepository();\n    };\n\n    componentDidMount(){\n        this.userData.userDetailsParam(this.userID)\n        .then(res => {\n            console.log(res)\n            res.data.forEach(ele => {\n                this.setState({userInfo:[...this.state.userInfo, new User(ele.userID, ele.username, ele.password, ele.email, ele.school, ele.major, ele.name, ele.grade, ele.isAdmin)]});\n                \n            });\n            console.log(this.state);\n        })\n        .catch(res => console.log(res));\n    };\n\n    updateProf() {\n        console.log(\"update\");\n        console.log(this.state.username);\n        console.log(this.state.password);\n        if ((this.state.password !== \"\") && (this.state.password === this.state.confirmPassword)) {\n            let password = this.state.password;\n            password = sha256(password);\n            this.userData.updateCreds({ username: this.state.username, password: password });\n        } else if (this.state.password !== this.state.confirmPassword) {\n             alert(\"Passwords do not match\");\n        }\n        if ((this.state.email !== \"\")) {\n            console.log(this.state.email);\n            this.userData.updateEmail(this.state.userID, { email: this.state.email });\n        }\n        console.log({ grade: this.state.grade, school : this.state.school, major : this.state.major, gradDate : this.state.gradDate });\n        this.userData.updateProfile(this.state.userID, { grade: this.state.grade, school: this.state.school, major: this.state.major, gradDate: this.state.gradYear });\n        this.props.history.push(\"/profile\")\n    }\n\n\n    render(){\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Edit Profile</span>\n            </nav>\n            <div className = \"p-3 container-fluid container-sm\">\n                <div className=\"card mb-1 w-75 mx-auto\">\n                    <div className = \"p-1 jumbotron jumbotron-fluid bg-light text-center\">\n                        <img src=\"/profileIcon.png\" className=\" img-fluid w-25 rounded mx-auto d-block\" alt=\"...\"/>\n                    </div>\n                    <form className = \"p-3\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" className=\"form-control\" id=\"username\" value={this.state.username} readOnly/>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\" className=\"form-control\" id=\"password\" onChange={e => this.setState({password: e.target.value})}/>\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <label htmlFor=\"confirmPassword\">Password Confirmation</label>\n                                <input type=\"password\" className=\"form-control\" id=\"confirmPassword\" onChange={e => this.setState({confirmPassword: e.target.value})}/>\n                            </div>\n                        </div>\n                         <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"\" onChange={e => this.setState({email: e.target.value})}/>\n                        </div>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"inputSchool\">School</label>\n                            <input type=\"text\" className=\"form-control\" id=\"inputSchool\" onChange={e => this.setState({school: e.target.value})}/>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-5\">\n                                <label htmlFor=\"inputMajor\">Major</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputMajor\" onChange={e => this.setState({major: e.target.value})}/>\n                            </div>\n                            <div className=\"form-group col-md-4\">\n                                <label htmlFor=\"inputGrade\">Grade</label>\n                                <input type=\"text\" className=\"form-control\" id=\"inputGrade\" onChange={e => this.setState({grade: e.target.value})}/>\n                            </div>\n                            <div className=\"form-group col-md-3\">\n                                <label htmlFor=\"gradDate\">Grad Date</label>\n                                <input type=\"date\" id=\"gradDate\" className=\"form-control\" onChange={e => this.setState({gradDate: e.target.value})} />\n                            </div> \n                        </div>\n                        <div className = \"text-center\">\n                            <button type=\"button\" className=\"btn btn-primary btn-md\" onClick={() => this.props.history.push(\"/profile\")}>Cancel</button>\n                            <button type=\"button\" className=\"btn btn-primary btn-md\" onClick={() => this.updateProf()}>Save</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>);\n    }\n}\n","import React from 'react';\n//import { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\n\n\nexport class Home extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n     }\n    \n    render() {\n        return(<>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item nav-link\">\n                    <a href=\"/home\" className=\"mb-0 h3 text-white font-weight-bold\">Campus</a>\n                    <a href=\"/home\" className=\"mb-0 h3 text-primary font-weight-bold\">Plus</a>\n                </li>\n            </ul>\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\n                <form className=\"form-inline \">\n                    <button className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/login\")}>LOG OUT</button>\n                </form>\n            </div>\n        </nav>\n        <nav className=\"navbar bg-white\">\n            <span className=\"mb-0 h5 text-primary\">Home</span>\n        </nav>\n\n         <div className = \"p-2 container-fluid container-md\">\n         <form className=\"mb-1 w-75 mx-auto mb-auto\">\n             <header className = \"p-1\">\n                 <h3 className = \"text-center text-dark font-weight-bold\">Welcome, {this.username}!</h3>\n             </header>\n            <div className = \"p-2 card-deck row-cols-3 row align-items-center\">\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/profileIcon.png\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                        <button type=\"button\" className=\"btn btn-primary mx-md-1 text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/profile\")}>Profile</button>\n                </div>\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/rightCalendar.png\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                        <button className=\"btn btn-primary mx-md-1 text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/calendar\")}>View Calendar</button>\n                </div>\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/assignments.png\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                        <button className=\"btn btn-primary mx-md-1 text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/assignments\")}>Current Assignments</button>\n                </div>\n             </div>\n            <div className = \" p-2 card-deck row-cols-3 row align-items-center\">\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/archive.png\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                        <button className=\"btn btn-primary mx-md-1 text-white btn-sm rounded overflow-hidden\" onClick={() => this.props.history.push(\"/finished_assignments\")}>Archived Assignments</button>\n                </div>\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/schedule.png\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                        <button className=\"btn btn-primary mx-md-1 text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/courses\")}>View Courses</button>\n                </div>\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/forum.png\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                    <button className=\"btn btn-primary text-white btn-sm rounded overflow-hidden\" onClick={() => this.props.history.push(\"/forum\")}>Review Forum</button>\n                    {/* <img src=\"/people.jpg\" className=\"p-1 img-fluid card-img-top\" alt=\"...\"/>\n                    <button className=\"btn btn-primary text-white btn-sm rounded overflow-hidden\" onClick={() => this.props.history.push(\"/aboutUs\")}>About Us</button> */}\n                </div>\n             </div>\n             </form>\n        </div>\n         </>\n            \n         );\n        \n     }//end Render\n }//end Home\n","import React from \"react\";\nimport './Calendar.css';\n//import {Assignments} from '../models/Assignment';\nimport { AssignmentRepository } from '../Api/assignmentRepository';\nimport { Header } from './Header';\n\nexport class Calendar extends React.Component{\n\n    constructor(){\nsuper();\nthis.userID = localStorage['userID'];\nthis.state ={\n    \n    \n    userID: this.userID,\n    month: '',\n    year: '',\n    //course: [],\n    \n}\n\nthis.returnDate();\nthis.ProductRepo = new AssignmentRepository();\n    }\n\n//      findAssignments(date){\n        \n//         console.log(date);\n//         console.log(this.userID);\n//         var assignments = null;\n//         var course = [];\n//         this.ProductRepo.getAssignments(this.state.userID)\n//             .then(res => {\n//                 assignments = res.data;\n//                 assignments.forEach(element => {\n//                     if (element.dueDate){\n//                         var newDate = this.formatDate(element.dueDate);\n//                         console.log(newDate);\n//                         let split = newDate.split('-');\n//                         console.log(\"split1\", split[1]);\n//                         if(date === split[1]){\n//                             //console.log('assignment', element);\n//                             course.push(element.name);\n//                             localStorage.setItem('course', course);\n//                             console.log(course);\n//                             //  localStorage.setItem('assignment', element.name);\n//                              localStorage.setItem('date', split[1] );\n                       \n\n//                         }\n//                          else{\n//                             // localStorage.setItem('course', \" \");\n//                             // localStorage.setItem('date', );\n\n\n//                         }\n//                        //console.log(course);\n//                         this.props.history.push(\"/daily\");\n//                     }\n//                 });\n//             })\n//             .catch(err => console.log(err));\n\n//         // if(this.ProductRepo.getAssignments().dueDate === date){\n\n//         // }\n\n//    }\n\n    findAssignments(date){\n        console.log(this.state.month);\n\n        this.props.history.push({\n            pathname: `/calendar/${date}/${this.state.month}/${this.state.year}`,\n            state: {day: date, month: this.state.month, year:this.state.year }\n        });\n        \n\n    \n}\n\n    componentDidMount(){\n        this.returnDate();\n\n        this.findDay();\n     \n    }\n\n    returnDate(){\n        var d = new Date();\n        this.setState({month:d.getMonth()+1});\n        this.setState({year:d.getFullYear()});\n     }\n\n      findDay(){\n            var x = new Date();\n         var selected = document.getElementById(x.getDate()); \n         console.log(selected);\n          selected.className = \"active\";\n      }\n      formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n    nextMonth(){\n        \n        if(this.state.month !== 12){\n            this.setState({month: (this.state.month + 1)});\n        }\n        else{\n            console.log(this.state.year);\n            var year = (this.state.year+1);\n            this.setState({year: year});\n            this.setState({month: 1});\n            console.log(this.state.year);\n        }\n\n    }\n\n    prevMonth(){\n\n        if(this.state.month !== 1){\n            this.setState({month: (this.state.month - 1)});\n        }\n        else{\n            this.setState({year: (this.state.year- 1)});\n            this.setState({month: 12});\n        }\n\n    }\n    \n\n\n    render() {\n        return(<>\n                \n        <Header />\n        <nav className=\"navbar bg-white\">\n            <span className=\"mb-0 h5 text-primary\">Monthly Calendar</span>\n        </nav>\n\n        <div className=\"p-5 card\">\n            {/*<h3 className=\"card-header\" id=\"mandyr\"></h3>*/}\n            <table className=\"table table-bordered table-responsive-sm\" id=\"calendar\">\n                <thead>\n                    <tr>\n                        <div className=\"month\">      \n                            <ul>\n                                <li className=\"prev\" onClick={()=>this.prevMonth()}>&#10094;</li>\n                                <li className=\"next\" onClick={()=>this.nextMonth()}>&#10095;</li>\n                                <li>                              \n                               {this.state.month}\n                                <br></br>\n                                {this.state.year}\n                                </li>\n                            </ul>\n                        </div>\n                        <ul className=\"weekdays\">\n                            <li>Sun</li>\n                            <li>Mon</li>\n                            <li>Tu</li>\n                            <li>We</li>\n                            <li>Th</li>\n                            <li>Fri</li>\n                            <li>Sat</li>\n                        </ul>\n                    </tr>\n                </thead>\n                <tbody id=\"calendarBody\">\n                    <ul className=\"days\">  \n                    <li onClick={()=> this.findAssignments(1)} ><span id =\"1\">1</span></li>\n                     <li onClick={()=> this.findAssignments(2)} ><span id =\"2\">2</span></li>\n                     <li onClick={()=> this.findAssignments(3)} ><span id =\"3\">3</span></li>\n                     <li onClick={()=> this.findAssignments(4)} ><span id =\"4\">4</span></li>\n                     <li onClick={()=> this.findAssignments(5)} ><span id =\"5\">5</span></li>\n                     <li onClick={()=> this.findAssignments(6)} ><span id =\"6\">6</span></li>\n                     <li onClick={()=> this.findAssignments(7)} ><span id =\"7\">7</span></li>\n                     <li onClick={()=> this.findAssignments(8)} ><span id =\"8\">8</span></li>\n                     <li onClick={()=> this.findAssignments(9)} ><span id =\"9\">9</span></li>\n                     <li onClick={()=> this.findAssignments(10)} ><span id =\"10\">10</span></li>\n                     <li onClick={()=> this.findAssignments(11)} ><span id =\"11\">11</span></li>\n                     <li onClick={()=> this.findAssignments(12)} ><span id =\"12\">12</span></li>\n                     <li onClick={()=> this.findAssignments(13)} ><span id =\"13\">13</span></li>\n                     <li onClick={()=> this.findAssignments(14)} ><span id =\"14\">14</span></li>\n                     <li onClick={()=> this.findAssignments(15)} ><span id =\"15\">15</span></li>\n                     <li onClick={()=> this.findAssignments(16)} ><span id =\"16\">16</span></li>\n                     <li onClick={()=> this.findAssignments(17)} ><span id =\"17\">17</span></li>\n                     <li onClick={()=> this.findAssignments(18)} ><span id =\"18\">18</span></li>\n                     <li onClick={()=> this.findAssignments(19)} ><span id =\"19\">19</span></li>\n                     <li onClick={()=> this.findAssignments(20)} ><span id =\"20\">20</span></li>\n                     <li onClick={()=> this.findAssignments(21)} ><span id =\"21\">21</span></li>\n                     <li onClick={()=> this.findAssignments(22)} ><span id =\"22\">22</span></li>\n                     <li onClick={()=> this.findAssignments(23)} ><span id =\"23\">23</span></li>\n                     <li onClick={()=> this.findAssignments(24)} ><span id =\"24\">24</span></li>\n                     <li onClick={()=> this.findAssignments(25)} ><span id =\"25\">25</span></li>\n                     <li onClick={()=> this.findAssignments(26)} ><span id =\"26\">26</span></li>\n                     <li onClick={()=> this.findAssignments(27)} ><span id =\"27\">27</span></li>\n                     <li onClick={()=> this.findAssignments(28)} ><span id =\"28\">28</span></li>\n                     <li onClick={()=> this.findAssignments(29)} ><span id =\"29\">29</span></li>\n                     <li onClick={()=> this.findAssignments(30)} ><span id =\"30\">30</span></li>\n                     <li onClick={()=> this.findAssignments(31)} ><span id =\"31\">31</span></li>\n                    </ul>\n                </tbody>\n            </table>\n            <div className=\"form-inline \">\n            <button className=\"btn btn-primary col-sm-3\" id=\"pre\" onClick={()=>this.prevMonth()}>Previous Month</button>\n            <div className=\"col-sm-3\"></div>\n            <button className=\"btn btn-primary col-sm-3\" id=\"nex\" onClick={()=>this.nextMonth()}>Next Month</button>\n        </div>\n        <br/>\n    </div>\n\n         </>\n        )}//end return\n\n}//end Calendar\n","export class Course {\n    constructor(courseID, courseDaysID, description, yearOffered, seasonOffered, courseTimeStart, courseTimeEnd, instructor) {\n        this.courseID = courseID;\n        this.courseDaysID = courseDaysID;\n        this.description = description;\n        this.yearOffered = yearOffered;\n        this.seasonOffered = seasonOffered;\n        this.courseTimeStart = courseTimeStart;\n        this.courseTimeEnd = courseTimeEnd;\n        this.instructor = instructor;\n    }\n}","import axios from 'axios'\n\nexport class ClassesRepository {\n\n    // Leave this here\n    url = false ? 'http://44.233.149.216:8000' : 'http://localhost:8000';\n\n    getCourseList(){\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/courses`, this.config)\n                .then(x => resolve(x.data))\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n   }\n\n\n    getCourses(courseID){\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}/courses/user/${courseID}`, this.config)\n                .then(x => resolve(x.data))\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n   }\n\n    // GET all of the classes on a students schedule : http://localhost:8000/courses/user/:userID\n    getStudentSchedule(userID) {\n        return new Promise((resolve,reject) => {\n            axios.get(`${this.url}/courses/user/${userID}`)\n                .then(x => {\n                resolve(x.data);\n            })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // DO NOT CONNECT YET\n    // POST Adds a class to the users schedule (don't need to pass in courseID) : http://localhost:8000/courses/:userID/\n    appendClassToUser(userID){\n        return new Promise((resolve,reject) =>{\n            axios.post(`${this.url}/courses/${userID}`)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n    // DELETE deletes a course from a students schedule according to the class ID : http://localhost:8000/courses/:userID/:courseID\n    deleteUserClass(userID, courseID) {\n            return new Promise((resolve, reject) => {\n                axios.delete(`${this.url}/courses/${userID}/${courseID}`)\n                    .then(x => resolve(x.data))\n                        alert(\"Class has been deleted from student's schedule\")\n            });\n    }\n    \n}","import React from \"react\";\nimport _ from 'lodash';\nimport { Header } from './Header';\nimport { Course } from '../models/Course';\nimport { ClassesRepository } from '../Api/classesRepository';\n\nexport class CourseDashboard extends React.Component{\n    \n    constructor(props){\n        super(props);\n\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n        \n        this.state = {\n            courses: [],\n            sortDirection: 'asc',\n            userID: this.userID,\n        };\n        \n        this.coursesRepo = new ClassesRepository();\n        this.formatDate = this.formatDate.bind(this);\n        this.formatTime = this.formatTime.bind(this);\n        this.formatSemester = this.formatSemester.bind(this);\n\n    }//end state\n\n    componentDidMount(){\n        this.coursesRepo.getStudentSchedule(this.state.userID)\n        .then(res => {\n            console.log(res)\n            res.forEach(ele => {\n                this.setState({courses:[...this.state.courses, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd)]});\n            });\n            console.log(this.state);\n\n        })\n\n        .catch(res => console.log(res));\n    }\n\n    sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatTime(myTime){\n        var timeValue;\n        var time = String(myTime);\n        time = time.split(':');\n\n        var hours = Number(time[0]);\n        var minutes = Number(time[1]);\n\n        if (hours > 0 && hours <= 12) timeValue= \"\" + hours;\n        else if (hours > 12) timeValue= \"\" + (hours - 12);\n        else if (hours === 0) timeValue= \"12\";\n\n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;\n        timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n\n        return timeValue;\n    }\n\n    formatSemester(semester, year){\n        if(semester === 1){\n            return 'Fall ' + String(year);\n        }\n\n        if(semester === 2){\n            return 'Spring ' + String(year);\n        }\n\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Courses</span>\n            </nav>\n            \n            <div className=\"p-5 container-fluid container-md\">\n                    <div className=\"p-5 container-fluid container-md\">\n                        <h2 className = \"p-3 text-center text-dark font-weight-bold\">My Current Courses</h2>\n                        <div id=\"content\">\n                            <div className = \"p-2 text-center mx-auto assignmentsTable w-auto table-responsive-md tableSort\">\n                                <table className=\"table table-striped table-bordered table-responsive-md\">\n                                    <thead className = \"thead-dark\">\n                                        <tr>\n                                            <th scope=\"col\">Course ID</th>\n                                            <th scope=\"col\">Course Name</th>\n                                            <th scope=\"col\">Term Offered</th>\n                                            <th scope=\"col\">Start Time</th>\n                                            <th scope=\"col\">End Time</th>\n                                            <th scope=\"col\">Edit</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        { this.state.courses.map((x) =>\n                                            <tr key = {x.courseID}>\n                                                <td>{x.courseDaysID}</td>\n                                                <td>{x.description}</td>\n                                                <td>{this.formatSemester(x.seasonOffered, x.yearOffered)}</td>\n                                                <td>{this.formatTime(x.courseTimeStart)}</td>\n                                                <td>{this.formatTime(x.courseTimeEnd)}</td>\n                                                <button type=\"button\" className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/viewCourses\")}>View Course</button>\n                                            </tr>)}\n                                        </tbody>\n                                    </table>\n                                <div className =\"p-3 btn-group\" role=\"group\" >\n                                    <button type=\"button rounded\" className=\"btn btn-primary\" onClick={() => this.props.history.push(\"/courses/search\")}>Search Available Courses</button>\n                                    <button type=\"button rounded\" className=\"btn btn-primary\" onClick={() => this.props.history.push(\"/courses/completed\")}>Archived Courses</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </div>\n            </div>\n          </>\n        )\n      }\n\n}//end CourseDashboard\n","import React from \"react\";\nimport { AssignmentRepository } from '../Api/assignmentRepository'\nimport { Header } from './Header';\n\nexport class AssignmentEditor extends React.Component{\n  \n    api = new AssignmentRepository();\n\n    constructor(){\n        \n        super();\n        this.userID = localStorage['userID'];\n       \n        \n        this.state ={\n            \n            // assignmentID: '',\n            // this.userID = userID;\n            // this.completionStatus = completionStatus;\n            courseID: ' ',\n            description: '',\n            dueDate: '',\n            name: '',\n            userID: '',\n            \n\n        }\n            \n        }\n        async delete(){\n            this.api.deleteAssignment(this.props.location.state.assignmentID);\n            await this.loadDash();\n\n\n            \n        }\n\n        async editAssignment(){\n            console.log(this.props.location.state.assignmentID);\n            const data = \n            {\n                \n                name: this.state.name,\n                description: this.state.assignmentDescription,\n                courseDescription: this.state.courseDescription,\n                dueDate: this.state.dueDate,\n                assignmentType: this.state.assignmentType,\n                completionStatus: 0}\n               \n                this.api.updateAssignment(this.props.location.state.assignmentID, data);\n                await this.loadDash();\n\n        }\n        loadDash(){\n            this.props.history.push('/assignments');\n        }\n\n        async markCompleted() {\n            this.api.updateCompletion(this.props.location.state.assignmentID, {completionStatus: 1});\n            await this.loadDash();\n        }\n\n\n    render() {\n        //let assignmentID = this.props.match.params.assignmentID;\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Edit Assignment</span>\n                <button className=\"btn btn-primary btn-sm float-right rounded\" onClick={() => this.props.history.push(\"/assignments\")}>Return</button>\n            </nav>\n            <div className=\"p-5 container-fluid container-lg\">\n                \n                <div className = \"card text-center mb-1 w-75 mx-auto\">\n                    <div className = \"jumbotron-fluid h-75 bg-primary text-white text-center\">\n                        <h4 className=\"p-4 card-title font-weight-bold\">Edit Assignment</h4>\n                    </div>\n                    <div className = \"form-group\">\n                    <div className = \"card-body\">\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"assignmentName\">Assignment Name</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"\" onChange={e => this.setState({name: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"courseInput\">Course</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"\" onChange={e => this.setState({courseDescription: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"dateInput\">Due Date</label>\n                                    <input type=\"date\" className=\"form-control\" placeholder=\"\" onChange={e => this.setState({dueDate: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"descriptionInput\">Description</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"\" onChange={e => this.setState({assignmentDescription: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                            <div className = \"form-group\">\n                            <label htmlFor=\"AssignmentType\">Assignment Type</label>\n                              <select id = \"AssignmentType\" onChange={e => this.setState({assignmentType: e.target.value})}>\n                              <option value = \"-1\" defaultValue>Choose...</option>\n                                <option value = \"Exam\">Exam</option>    \n                                <option value = \"Quiz\">Quiz</option>    \n                                <option value = \"Paper\">Paper</option>   \n                                <option value = \"Homework\">Homework</option>\n                                <option value = \"Project\">Project</option> \n                               \n                               </select>\n                               </div>\n                            </div>\n                            <div className=\"p-3 form-row justify-content-center\">\n                                    <button type=\"button\" className=\"btn btn-primary btn-md btn-primary\" onClick={e => this.editAssignment()}>Save Changes</button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-md btn-primary\" onClick={e => this.markCompleted()}>Mark As Complete</button>\n                                    <button type=\"button\" className=\"btn btn-primary btn-md btn-primary\" onClick={e => this.delete()}>Delete</button>\n                            </div>\n                        </form>\n                    </div>   \n                </div>\n                \n                </div>\n            </div>\n            </>\n        )}\n}\n\n","import React from \"react\";\nimport { Header } from './Header';\nimport { ClassesRepository } from '../Api/classesRepository';\nimport { Course } from '../models/Course.js'\n\nexport class CourseSearch extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.userID = localStorage['userID'];\n\n        this.state = {\n            courses: [],\n            semester: -1,\n            courseID: -1,\n            courseName: \"None\",\n            courseTime: '',\n            instructor: \"None\"\n\n        };\n\n        this.courseRepo = new ClassesRepository();\n    }\n\n    async search() {\n        console.log(this.courseRepo.getCourseList());\n\n        this.courseRepo.getCourseList()\n        .then(res => {\n            console.log(res);\n            res.forEach(ele => {\n                console.log(this.state.courseName);\n                // var val = parseInt(this.state.semester);\n                if (\n                   /*   ((ele.seasonOffered === val) || (val === -1)) && \n                    ((ele.courseID === parseInt(this.state.courseID)) || (parseInt(this.state.courseID) === 0)) && */\n                    ((ele.description === this.state.courseName) || (this.state.courseName === \"None\"))\n                   //((ele.instructor === this.state.instructor) || (this.state.instructor === \"None\"))\n                ) \n                {\n                    this.setState({courses:[...this.state.courses, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd, ele.instructor)]}); \n                }\n            });\n            this.showResults();\n        })\n        .catch(res => console.log(res));\n    }\n\n    async showResults() {\n        console.log(this.state.courses);\n        this.props.history.push({\n            pathname: \"/courses/search/results\",\n            state: {courses: this.state.courses}\n        })\n    }\n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary \">Course Search</span>\n            </nav>\n            <div className = \"p-3 container-sm container-fluid text-center\">\n                <div className =\"header\"> \n                </div>\n                <form>\n                    <h2 className = \"text-left font-weight-bold\">Search Courses</h2>\n                    <div>\n                    {/*<select className=\"p-2 custom-select mb-3\" onChange={e => this.setState({semester: e.target.value})}>\n                        <option value=\"-1\"selected>Search By Semester (required)</option>\n                            <option value=\"1\">Fall 2020</option>\n                            <option value=\"2\">January 2021</option>\n                            <option value=\"3\">Spring 2021</option>\n                            <option value=\"4\">May2021</option>\n                    </select>\n\n                    <select className=\"p-2 custom-select mb-3\" onChange={e => this.setState({courseID: e.target.value})}>\n                        <option value=\"-1\" defaultValue>Search By Course ID (required)</option>\n                            <option value=\"1\">ASIM 1310</option>\n                            <option value=\"ASIM 3305\">ASIM 3305</option>\n                            <option value=\"ASPT 1300\">ASPT 1300</option>\n                            <option value=\"CS 5324\">CS 5324</option>\n                    </select> */}\n                    \n                    <select className=\"p-2 custom-select mb-3\" onChange={e => this.setState({courseName: e.target.value})}>\n                        <option value=\"None\" defaultValue>Search By Course Name (required)</option>\n                            <option value=\"Programming Languages\">Programming Languages</option>\n                            <option value=\"Calculus 2 \">Calculus 2</option>\n                            <option value=\"GUI\">GUI</option>\n                            <option value=\"Swimming\">Swimming</option>\n                            <option value=\"Bowling\">Bowling</option>\n                            <option value=\"Databases \">Databases</option>\n                            <option value=\"Linear Algebra\">Linear Algebra</option>\n                            <option value=\"Philosophy \">Philosophy</option>\n                            <option value=\"DISC\">DISC</option>\n                            <option value=\"Chemistry\">Chemistry</option>\n                            <option value=\"The business of business\">The Business of Business</option>\n                            <option value=\"Information Security\">Information Security</option>\n                    </select>\n\n                    {/*<select className=\"p-2 custom-select mb-3\" onChange={e => this.setState({courseTime: e.target.value})}>\n                        <option selected>Search By Class Time (optional)</option>\n                            <option value=\"8am\">8:00 AM</option>\n                            <option value=\"9am\">9:00 AM</option>\n                            <option value=\"11am\">11:00 AM</option>\n                            <option value=\"330pm\">3:30 PM</option>\n                    </select>\n                    \n                    <select className=\"p-2 custom-select mb-3\" onChange={e => this.setState({instructor: e.target.value})}>\n                        <option value=\"None\" defaultValue>Search By Professor (required)</option>\n                            <option value=\"Fontenot\">Mark Fontenot</option>\n                            <option value=\"jimmydean\">Jimmy Dean</option>\n                            <option value=\"captainMorgan\">Captain Morgan</option>\n                            <option value=\"tonyStark\">Tony Stark</option>\n                    </select>\n                    */}\n                    </div>\n                        <button type=\"button\" className=\"btn btn-primary rounded\" onClick={() => this.props.history.push(\"/courses\")}>Cancel</button>\n                        <button type=\"button\" className=\"btn btn-primary rounded\" onClick={() => this.search()}>Search</button>\n                </form>\n            </div>\n          </>\n        )\n      }\n\n}//end CourseSearch\n","import React from 'react'\nimport _ from 'lodash';\nimport { Header } from './Header';\nimport { AssignmentRepository } from '../Api/assignmentRepository';\nimport { Assignment } from '../models/Assignment';\n\nexport class ArchivedAssignments extends React.Component {\n\n    \n    constructor(props){\n        super(props);\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n\n        this.state = {\n            archieve: [],\n            sortDirection: 'asc',\n            username: this.username,\n            userID: this.userID,\n        };\n\n        this.assignmentRepo = new AssignmentRepository();\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n\n\n    componentDidMount(){\n        this.assignmentRepo.getAssignments(this.state.userID)\n        .then(res => {\n            console.log(res)\n            res.data.forEach(ele => {\n                if(ele.completionStatus === 1){\n                    this.setState({archieve:[...this.state.archieve, new Assignment(ele.assignmentID, ele.courseID, ele.description, ele.dueDate, ele.assignmentType, ele.completionStatus, ele.name, ele.userID)]});\n                }\n            });\n            console.log(this.state);\n\n        })\n\n        .catch(res => console.log(res));\n    }\n\n        sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({archieve: _.orderBy(this.state.archieve, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({archieve: _.orderBy(this.state.archieve, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n    storeID(id){\n        this.props.history.push({\n            pathname: `/assignment/${id}`,\n            state: {assignmentID: id}\n        });\n        \n\n    }\n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Archived Assignments</span>\n            </nav>\n            <div className=\"p-5 container-fluid container-md\">\n                    <h2 className = \"p-3 text-center text-dark font-weight-bold\">Completed Assignments</h2>\n                    <div id=\"content\">\n\n                    <div className = \"p-2 text-center mx-auto assignmentsTable w-auto table-responsive-md tableSort\">\n                    <table className=\"table table-striped table-responsive-md\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'name')}>Assignment</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" aria-pressed=\"true\" onClick={this.sortBy.bind(this, 'courseID')}>Course</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" aria-pressed=\"true\" onClick={this.sortBy.bind(this, 'assignmentType')}>Assignment Type</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" aria-pressed=\"true\" onClick={this.sortBy.bind(this, 'dueDate')}>Due Date</button></th>\n                            <th><button className=\"btn btn-primary btn-rounded\" type=\"button\" id=\"Assign\" onClick={this.sortBy.bind(this, 'description')}>Description</button></th>\n                            <th>Edit</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            { this.state.archieve.map((x) =>\n                                <tr key = {x.assignmentID}>\n                                    <td>{x.name}</td>\n                                    <td>{x.courseID}</td>\n                                    <td>{x.assignmentType}</td>\n                                    <td>{this.formatDate(x.dueDate)}</td>\n                                    <td>{x.description}</td>\n                                    <td><button type=\"button\" className=\"btn-floating yellow darken-1 rounded\" onClick={() => this.storeID(x.assignmentID)}><i className=\"fas fa-pencil-alt\"></i></button></td>\n\n                                </tr>)}\n                        </tbody> \n                    </table>\n                </div>\n            </div>\n        </div>\n          </>\n        )\n      }\n}//end ArchivedAssignments\n","import React from \"react\";\nimport _ from 'lodash';\nimport { Header } from './Header';\nimport { Course } from '../models/Course';\nimport { ClassesRepository } from '../Api/classesRepository';\n\nexport class ArchivedCourses extends React.Component{\n\n        constructor(props){\n        super(props);\n        this.state = {\n            courses: [],\n            sortDirection: 'asc',\n            userID: 1,\n        };\n        \n        this.coursesRepo = new ClassesRepository();\n        this.formatDate = this.formatDate.bind(this);\n        this.formatSemester = this.formatSemester.bind(this);\n\n    }//end state\n\n    componentDidMount(){\n        this.coursesRepo.getStudentSchedule(this.state.userID)\n        .then(res => {\n            console.log(res)\n            res.forEach(ele => {\n                this.setState({courses:[...this.state.courses, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd)]});\n            });\n            console.log(this.state);\n\n        })\n\n        .catch(res => console.log(res));\n    }\n\n    sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatSemester(semester, year){\n        if(semester === 1){\n            return 'Fall ' + String(year);\n        }\n\n        if(semester === 2){\n            return 'Spring ' + String(year);\n        }\n\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Archived Courses</span>\n            </nav>\n            <div className = \"container-fluid container-lg\" id=\"content\">\n            <div className = \"text-center mx-auto\">\n                <div className=\"p-3 container\">\n                    <h2 className = \" p-3 text-center text-dark font-weight-bold\">Completed Courses</h2>\n                <table className=\"table table-striped table-bordered\">\n                    <thead className = \"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Course ID</th>\n                            <th scope=\"col\">Course Name</th>\n                            <th scope=\"col\">Semester Offered</th>\n                            <th scope=\"col\">View Course</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>ASIM 1310</td>\n                            <td>Creative Coding 1</td>\n                            <td>January 2021</td>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm rounded\">View Course</button>\n                        </tr>\n                    </tbody>\n                </table>\n                <button type=\"button\" className=\"btn btn-primary rounded\" onClick={() => this.props.history.push(\"/courses\")}>Return</button>\n            </div>\n            </div>\n            </div>\n          </>\n        )\n      }\n\n}//end ArchivedCourses","import React from \"react\";\nimport { Header } from './Header';\nimport './daily.css';\nimport {AssignmentRepository} from \"../Api/assignmentRepository\";\nimport {Assignment} from \"../models/Assignment\";\n\nexport class CalendarDaily extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.userID = localStorage['userID'];\n    \n\n        this.state = {\n            day: this.props.location.state.day,\n            month: this.props.location.state.month,\n            year: this.props.location.state.year,\n            assignments: [],\n        }\n        this.ProductRepo = new AssignmentRepository();\n        this.displayAssignments()\n\n     }\n\n     async findAssignments(){\n        \n        //console.log(date);\n        console.log(this.userID);\n        //var assignments = null;\n       // var course = [];\n       console.log(this.ProductRepo.getAssignments(this.userID));\n        return (await this.ProductRepo.getAssignments(this.userID));\n           \n\n   }\n\n   async displayAssignments(){\n    var assignments = (await this.findAssignments()).data;\n    assignments.forEach(ele => {\n     if (ele.dueDate){\n         var newDate = new Date(ele.dueDate);\n         //console.log(newDate);\n         console.log(newDate.getDate());\n         console.log(this.state.day);\n         \n         if((this.state.day === newDate.getDate()+1)&&(this.state.month === newDate.getMonth()+1)&&(this.state.year === newDate.getFullYear())){\n\n             this.setState({assignments:[...this.state.assignments, new Assignment(ele.assignmentID, ele.courseID, ele.description, ele.dueDate, ele.assignmentType, ele.completionStatus, ele.name, ele.userID)]});\n                      \n\n         }\n         \n         \n     }\n })\n    console.log(this.state.assignments);\n\n}\n\n  \n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Daily Schedule</span>\n            </nav>\n\n        <div className=\"p-3 card\" >\n    \n         <h2>\n         <button className=\"btn btn-primary btn-sm float-right rounded\" onClick={() => this.props.history.push(\"/calendar\")}>Return</button>\n         </h2>\n         <table className=\"table table-bordered table-responsive-sm\" id=\"calendar\">\n             <thead>\n                 <tr>\n                     <div className=\"month\">      \n                         <ul>\n                             <li>\n                            \n                           {this.state.month}\n                             <br></br>\n                             {this.state.year}\n                             </li>\n                         </ul>\n                        \n                     </div>\n                  \n                 </tr>\n            \n             </thead>\n             <tbody id=\"calendarBody\">\n              <br></br>\n             <h2 id=\"calDay\">{this.state.day}</h2> \n             { this.state.assignments.map((x) =>\n                        <tr key = {x.assignmentID}>\n                            <td className = \"text-center\">{x.name}</td>\n                            \n                            </tr>)}\n\n                        \n                             \n                   {/* <ul className=\"dayz\">  \n                 <br></br> */}\n                 \n                \n                  \n                     {/* <li>{this.state.assignments}</li>\n                     <br></br> */}\n                     \n                 {/* </ul>   */}\n                 \n                \n             </tbody>\n         </table>\n     <br/>\n </div>\n        </>\n        )\n    }\n}","import React from \"react\";\nimport _ from 'lodash';\nimport { Header } from './Header';\nimport { Course } from '../models/Course';\nimport { ClassesRepository } from \"../Api/classesRepository\";\nimport { AssignmentRepository } from \"../Api/assignmentRepository\";\n\nexport class ViewCourse extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.username = localStorage['username'];\n        this.userID = localStorage['userID'];\n\n        this.state = {\n            assignments: [],\n            courseDetails: [],\n            sortDirection : 'asc',\n            userID: this.userID,\n            username: this.username,\n            courseID: 1,\n            courses: [],\n            descriptions: [],\n            backup: [],\n        };\n\n        this.courseRepo = new ClassesRepository();\n        this.assignmentRepo = new AssignmentRepository();\n        this.formatDate = this.formatDate.bind(this);\n        this.formatTime = this.formatTime.bind(this);\n        this.formatSemester = this.formatSemester.bind(this);\n\n    }//end state\n\n\n    componentDidMount(){\n\n        this.courseRepo.getCourses(this.state.userID)\n            .then(res => {\n            console.log(res)\n            res.forEach(ele => {\n                this.setState({courseDetails:[...this.state.courseDetails, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd, ele.instructor)]});\n            });\n            console.log(this.state);\n\n        })\n        .catch(res => console.log(res));\n\n        this.assignmentRepo.getAssignmentsClass(this.state.userID, this.state.courseID).then(x => this.setState({courses : x.data}));\n        this.assignmentRepo.getAssignmentsClass(this.state.userID, this.state.courseID).then(y => this.setState({description : y.data}));\n    }\n\n    sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({assignments: _.orderBy(this.state.assignments, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({assignments: _.orderBy(this.state.assignments, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatTime(myTime){\n        var timeValue;\n        var time = String(myTime);\n        time = time.split(':');\n\n        var hours = Number(time[0]);\n        var minutes = Number(time[1]);\n\n        if (hours > 0 && hours <= 12) timeValue= \"\" + hours;\n        else if (hours > 12) timeValue= \"\" + (hours - 12);\n        else if (hours === 0) timeValue= \"12\";\n\n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;\n        timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n\n        return timeValue;\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n    formatSemester(semester, year){\n        if(semester === 1){\n            return 'Fall ' + String(year);\n        }\n\n        if(semester === 2){\n            return 'Spring ' + String(year);\n        }\n\n    }\n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">View Course</span>\n            </nav>\n            <div className =\"p-2 text-right\" role=\"group\" >\n                <button type=\"p-3 button rounded\" class=\"btn btn-primary\" onClick={() => this.props.history.push(\"/courses\")} >Return</button>\n            </div>\n            <div className = \"container-fluid container-lg\" id=\"content\">\n            <div className = \"text-center mx-auto\">\n                \n                <div className=\"p-3 container\">\n                    <h2 className = \" p-3 text-center text-dark font-weight-bold\">Course Information</h2>\n                <table className=\"table table-striped table-bordered\">\n                    <thead className = \"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Course ID</th>\n                            <th scope=\"col\">Course name</th>\n                            <th scope=\"col\">Days</th>\n                            <th scope=\"col\">Professor</th>\n                            <th scope=\"col\">Start Time</th>\n                            <th scope=\"col\">End Time</th>\n                            <th scope=\"col\">Semester Offered</th>\n                            <th scope=\"col\">Remove</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        { this.state.courseDetails.map((x) =>\n                            <tr key = {x.courseID}>\n                                <td>{x.courseID}</td>\n                                <td>{x.description}</td>\n                                <td>{x.courseDaysID}</td>\n                                <td>{x.instructor}</td>\n                                <td>{this.formatTime(x.courseTimeStart)}</td>\n                                <td>{this.formatTime(x.courseTimeEnd)}</td>\n                                <td>{this.formatSemester(x.seasonOffered, x.yearOffered)}</td>\n                                <td><button type=\"button\" className=\"btn-floating btn-danger darken-1 rounded\"><i className=\"fas fa-trash-alt\"></i></button></td>\n                            </tr>)}\n                        </tbody> \n                </table>\n                <p>Note: List current assigments for current course</p>\n            </div>\n            </div>\n            </div>\n          </>\n        )\n      }\n\n}//end ViewCourse\n","import React from 'react';\n//import { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\n\nexport class GuestHome extends React.Component {\n\n     state = {\n     }\n    \n     render() {\n         return(<>   \n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n            <a href=\"/guest\" className=\"mb-0 h4 text-white font-weight-bold\">Campus</a>\n            <a href=\"/guest\" className=\"mb-0 h4 text-primary font-weight-bold\">Plus</a>\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\n                <form className=\"form-inline \">\n                    <button className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/login\")}>LOG OUT</button>\n                </form>\n            </div>\n        </nav>\n        <nav className=\"navbar bg-white\">\n            <span className=\"mb-0 h5 text-primary\">Guest Home</span>\n        </nav>\n\n         <div className = \"p-4 container-fluid container-md\">\n         <form className=\"mb-1 w-75 mx-auto mb-auto\">\n         <header className = \"p-1\">\n                 <h3 className = \"text-center text-dark font-weight-bold\">Welcome, Guest!</h3>\n             </header>\n            <div className = \" p-3 card-deck row-cols-2 row align-items-center\">\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/schedule.png\" className=\"p-2 img-fluid card-img-top\" alt=\"...\"/>\n                        <button className=\"btn btn-primary text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/courselist\")}>Courses Offered</button>\n                </div>\n                <div className=\"p-1 card h-100 w-100\">\n                    <img src=\"/forum.png\" className=\"p-2 img-fluid card-img-top\" alt=\"...\"/>\n                    <button className=\"btn btn-primary text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/forum\")}>Course Forum</button> \n                    {/* <img src=\"/people.jpg\" className=\"p-2 img-fluid card-img-top\" alt=\"...\"/> \n                    <button className=\"btn btn-primary text-white btn-sm rounded\" onClick={() => this.props.history.push(\"/guestAboutUs\")}>AboutUs</button>  */}\n                </div>\n             </div>\n             </form>\n        </div>\n         </> \n         );\n        \n     }//end Render\n }//end Home\n","import React from \"react\";\nimport _ from 'lodash';\nimport { Course } from '../models/Course';\nimport { ClassesRepository } from '../Api/classesRepository';\n\nexport class CourseList extends React.Component{\n\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            courses: [],\n            sortDirection: 'asc',\n        };\n\n        this.courseRepo = new ClassesRepository();\n        this.formatDate = this.formatDate.bind(this);\n        this.formatTime = this.formatTime.bind(this);\n        this.formatSemester = this.formatSemester.bind(this);\n\n    }//end state\n\n\n    componentDidMount(){\n        //need to return full list of courses, userID not needed\n        this.courseRepo.getCourseList()\n        .then(res => {\n            res.data.forEach(ele => {\n                this.setState({courses:[...this.state.courses, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd, ele.instructor)]});\n            });\n        })\n        \n        .catch(res => console.log(res));\n    }\n\n    sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatSemester(semester, year){\n        if(semester === 1){\n            return 'Fall ' + String(year);\n        }\n\n        if(semester === 2){\n            return 'Spring ' + String(year);\n        }\n    }\n\n    formatTime(myTime){\n        var timeValue;\n        var time = String(myTime);\n        time = time.split(':');\n\n        var hours = Number(time[0]);\n        var minutes = Number(time[1]);\n\n        if (hours > 0 && hours <= 12) timeValue= \"\" + hours;\n        else if (hours > 12) timeValue= \"\" + (hours - 12);\n        else if (hours === 0) timeValue= \"12\";\n\n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;\n        timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n\n        return timeValue;\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n\n    render() {\n        return(<>\n            \n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n            <a href=\"/guest\" className=\"mb-0 h4 text-white font-weight-bold\">Campus</a>\n            <a href=\"/guest\" className=\"mb-0 h4 text-primary font-weight-bold\">Plus</a>\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\n                <form className=\"form-inline \">\n                    <button className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/login\")}>LOG OUT</button>\n                </form>\n            </div>\n        </nav>\n\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Courses Offered</span>\n            </nav>\n\n            <div className = \"container-fluid container-lg\" id=\"content\">\n            <div className = \"text-center mx-auto\">\n                \n                <div className=\"p-3 container\">\n                    <h2 className = \" p-3 text-center text-dark\">Courses Offered</h2>\n                <table className=\"table table-striped table-bordered\">\n                    <thead className = \"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Course ID</th>\n                            <th scope=\"col\">Course Name</th>\n                            <th scope=\"col\">Offered Term</th>\n                            <th scope=\"col\">Professor</th>\n                            <th scope=\"col\">Start Time</th>\n                            <th scope=\"col\">End Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { this.state.courses.map((x) =>\n                        <tr key = {x.courseID}>\n                            <td>{x.courseID}</td>\n                            <td>{x.description}</td>\n                            <td>{this.formatSemester(x.seasonOffered,x.yearOffered)}</td>\n                            <td>{x.instructor}</td>\n                            <td>{this.formatTime(x.courseTimeStart)}</td>\n                            <td>{this.formatTime(x.courseTimeEnd)}</td>\n                        </tr>\n                    )}\n                    {/*\n                        <tr>\n                            <td>ASIM 1310</td>\n                            <td>Creative Coding 1</td>\n                            <td>MWF</td>\n                            <td>James Burns</td>\n                            <td>10:00 AM</td>\n                            <td>10:50 AM</td>\n                        </tr>\n                    */}\n                    </tbody>\n                </table>\n            </div>\n            </div>\n            </div>\n          </>\n        )\n      }\n}//end CourseList\n","import React from 'react';\n// import { CommentRepository } from '../Api/commentRepository';\nimport { ClassesRepository } from '../Api/classesRepository';\nimport { Course } from '../models/Course';\nimport { Header } from './Header';\nimport { Link } from 'react-router-dom';\n\nexport class ForumDashboard extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.username = localStorage['username'];\n        this.courseID = localStorage['courseID'];\n\n        this.state = {\n            courses: [],\n        };\n\n        this.courseRepo = new ClassesRepository();\n    }//end state\n\n\n    componentDidMount(){\n        this.courseRepo.getCourseList()\n        .then(res => {\n            res.forEach(ele => {\n                this.setState({courses:[...this.state.courses, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd, ele.instructor)]});\n            });\n        })\n        .catch(res => console.log(res));\n    }\n\n\n    render() {\n        return <>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Course Review Forum</span>\n            </nav>\n            <div className=\"p-4 container-fluid container-md\">\n                <div className = \"jumbotron-fluid bg-white text-center\">\n                    <h5 className=\"display-4 text-dark font-weight-bold\">Course Forum </h5>\n                    <div className = \"row justify-content-center\">\n                        <button className=\"btn btn-dark text-white btn-sm rounded\">Create New Thread</button>\n                    </div>\n                </div>\n                <div className=\"p-3 list-group\">\n                    <a href=\"/\" className=\"list-group-item list-group-item-action active\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1 text-white\">Active Threads</h5>\n                        </div>\n                    </a>\n\n                    { this.state.courses.map((x) =>\n                    \n                    <Link key ={x.courseID} className=\"list-group-item list-group-item-action\" to = {`/course_reviews/${x.courseID}`}>\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1 font-weight-bold\">{x.courseID}</h5>\n                            <small className=\"text-muted align-items-right\">3 days ago</small>\n                        </div>\n                        <p className=\"mb-1 \">{x.description}</p>\n                        <small className=\"text-muted\">Comment Count: </small>\n                        <span className=\"badge badge-primary badge-pill\"> 14</span>\n                        </Link>\n                    )}\n                </div>\n\n                <div className=\"p-3 list-group\">\n                    <a href=\"/\" className=\"list-group-item list-group-item-action active\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Archived Threads</h5>\n                        </div>\n                    </a>\n                    \n                    <a href=\"/\" className=\"list-group-item list-group-item-action\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1 font-weight-bold\">KNW 2300</h5>\n                            <small className=\"text-muted align-items-right\">15 days ago</small>\n                        </div>\n                        <p className=\"mb-1\">A reminder of our torture</p>\n                        <small className=\"text-muted\">Comment Count: </small>\n                        <span className=\"badge badge-primary badge-pill\"> 7</span>\n                    </a>\n                </div>\n            </div>\n        </>\n    }\n}","import React from 'react';\n//import { ClassesRepository } from '../Api/classesRepository';\n//import { CommentRepository } from '../Api/commentRepository';\n\nconst CommentList = (props) => {\n\n    if (props.reviews.length === 0){\n        return (\n            <>\n            <div className = \"container-fluid container-md\">\n                <h3>Course Reviews <span className=\"text-muted\">({props.reviews.length})</span></h3>\n                <div className=\"bg-light\">\n                    <p className=\"text-body p-3\">Be the first to review!</p>\n                </div>\n            </div>\n            </>\n        );\n    }else {\n        return ( \n            <>\n            <div className = \"p-2 container-fluid container-md\">\n                <h3>Course Reviews <span className=\"text-muted\">({props.reviews.data.length})</span></h3>\n            </div>\n            <div className=\"card\">\n            {\n                props.reviews.data.map(x => {\n                    return (\n                        <div className = \"p-2 container-fluid container-md\" key={x.commentID}>\n                            <div className=\"row\">Title: {x.title}</div>\n                            <div className=\"card-body row\">\n                                <div className=\"col-9\">\n                                    <p>\"{x.body}\" - {x.username}</p>\n                                </div>\n                                <div className=\"col-3\">\n                                    <p className=\"float-right text-muted\"></p>\n                                </div>  \n                                <div className=\"col-md-12 mb-4\">\n                                    <button type=\"button\" className=\"btn btn-primary px-3\"><i className=\"far fa-thumbs-up\" aria-hidden=\"true\"></i></button>\n                                    <button type=\"button\" className=\"btn btn-primary px-3\"><i className=\"far fa-thumbs-down\" aria-hidden=\"true\"></i></button>\n                                    <button type=\"button\" className=\"btn btn-primary px-3\"><i className=\"fas fa-flag\" aria-hidden=\"true\"></i></button>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })\n            }\n            </div>\n            </>\n        );\n    }\n}\n \nexport default CommentList;","import React from \"react\";\n//import {Comment} from '../models/Comment';\n\nexport class ForumCommentForm extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.userID = localStorage['userID'];\n        this.username = localStorage['username'];\n\n        this.state = {\n            userID: this.userID,\n            title: '',\n            body: ''\n        }\n    }\n  \n    render() {\n        return(<>\n            <div className = \"p-4 container-fluid container-sm\">\n            <form className = \"card\">\n                <div className = \"card-header bg-dark text-light\">\n                   <h4 id = \"addReviewTitle font-weight-bold\">Create New Comment</h4> \n                </div>\n                <div className = \"p-4 cardBody\">  \n                    <div className =\"form-row\">\n                        <div className = \"form-group col-md-7\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" className=\"form-control\" name=\"rating\" id=\"username\" value={this.username} readOnly/>\n                        </div>\n                        <div className = \"form-group col-md-7\">\n                            <label htmlFor=\"inputTitle\">Title</label>\n                            <input type=\"text\" className=\"form-control\" name=\"title\" id=\"title\" onChange={e => this.setState({title: e.target.value})}/>\n                        </div>\n                    </div>\n                    <div className = \"form-group\">\n                        <label htmlFor=\"inputComment\">Comment</label>\n                        <textarea name=\"comment\" id=\"comment\" className=\"form-control\" onChange={e => this.setState({body: e.target.value})}></textarea>\n                    </div>\n                    <div className = \"form-group\">\n                        <h1>{this.state.title} + {this.state.body}</h1>\n                        <button type = \"button\" className = \"btn btn-primary\"\n                            onClick = { () => this.addReview() } >\n                            Submit\n                        </button>\n                    </div>\n                </div>\n            </form>\n            </div>\n        </>)\n    }\n\n    addReview = () => {\n        var prod = new Comment(\n            this.state.userID,\n            this.courseID,\n            this.state.title,\n            this.state.body\n        )\n        this.props.onReviewAdded(prod);\n        this.setState({\n            userID: this.state.userID,\n            courseID: this.courseID,\n            title: '',\n            body: ''\n        })\n    }\n    \n}\nexport default ForumCommentForm;\n","import axios from 'axios'\n\nexport class CommentRepository {\n\n    // Leave this here \n    url = false ? 'http://44.233.149.216:8000' : 'http://localhost:8000';\n    \n    // GET returns all comments : http://localhost:8000/comment\n    getComments(loginData){\n        return new Promise((resolve,reject) =>{\n            axios.get(`${this.url}/comment/`, loginData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // GET a comment by commentID : http://localhost:8000/comment/:commentID\n    //getComments(commentID){\n    //    return new Promise((resolve,reject) =>{\n    //        axios.get(`${this.url}/comment/${commentID}`)\n    //            .then(x => {\n    //                resolve(x.data);\n    //            })\n    //        .catch(x => {\n    //            alert(x);\n    //            reject(x);\n    //        })\n    //    })\n    //}\n\n    // GET all of the comments associated w/ a user : http://localhost:8000/comment/user/:userID\n    getUserComments(userID){\n        return new Promise((resolve,reject) =>{\n            axios.get(`${this.url}/comment/user/${userID}`)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // GET all of the comments associated w/ a class : http://localhost:8000/comment/class/:courseID\n    getClassComments(courseID){\n        return new Promise((resolve,reject) =>{\n            axios.get(`${this.url}/comment/class/${courseID}`)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n    // POST Adds a comment to a class : http://localhost:8000/comment/:userID/:courseID\n    addClassComment(userID, courseID, title, body){\n        return new Promise((resolve,reject) =>{\n            axios.post(`${this.url}/comment/${userID}/${courseID}`, title, body)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        });\n    }\n\n\n    // PUT Edit the title of a specific title: http://localhost:8000/comment/:commentID/title\n    editTitle(commentID, title){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/comment/${commentID}/title`, title)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n\n    // PUT Edit the body of a specific comment: http://localhost:8000/comment/:commentID/body\n    editBody(commentID, body){\n        return new Promise((resolve,reject) =>{\n            axios.put(`${this.url}/comment/${commentID}/body`, body)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n\n\n    // DELETE deletes the comment with passed in commentID: http://localhost:8000/comment/:commentID\n    deleteComment(commentID) {\n            return new Promise((resolve, reject) => {\n                axios.delete(`${this.url}/comment/${commentID}`, this.config)\n                    .then(x => resolve(x.data))\n                        alert(\"Comment has been deleted\")\n            });\n    }\n\n\n    verifyUser(loginData){\n        return new Promise((resolve,reject) =>{\n            axios.post(`${this.url}/comment/user/login`, loginData)\n                .then(x => {\n                    resolve(x.data);\n                })\n            .catch(x => {\n                alert(x);\n                reject(x);\n            })\n        })\n    }\n    \n}","import React, { Component } from 'react';\nimport CommentList from './CommentList';\nimport ForumCommentForm from './ForumCommentForm';\n// import { ClassesRepository } from '../Api/classesRepository';\nimport { CommentRepository } from '../Api/commentRepository';\n// import { Course } from '../models/Course';\nimport { Header } from './Header';\n\nexport class CourseAndComments extends Component {\n\n    constructor(props) {\n        super(props);\n        this.userID = localStorage['userID'];\n        this.courseID = this.props.match.params.courseID;\n\n        this.state = {\n            userID: this.userID,\n            reviews: [],\n            \n            //class: {\n            //    courseID: this.props.match.params.courseID,\n            //    description: '',\n            //    reviews: []\n            ///}\n        };\n        //this.courseRepo = new ClassesRepository();\n        this.commentRepo = new CommentRepository();\n        \n    }\n\n    componentDidMount(){\n        //this.courseRepo.getCourses(this.courseID)\n        this.commentRepo.getClassComments(this.courseID)\n        .then(res => {\n            console.log(res)\n            this.setState({reviews: res})\n            //res.data.forEach((ele) => {\n                ////this.setState({class:[...this.state.class, new Course(ele.courseID, ele.courseDaysID, ele.description, ele.yearOffered, ele.seasonOffered, ele.courseTimeStart, ele.courseTimeEnd, ele.instructor)]});\n                //this.setState({reviews:[...this.state.reviews, new Comment(ele.commentID, ele.userID, ele.courseID, ele.title, ele.body, ele.postTime)]});\n                //this.setState({reviews:[...this.state.reviews, new Comment(ele.userID, ele.courseID, ele.title, ele.body)]});\n            //});\n            console.log(this.state)\n        })\n        \n        .catch(res => console.log(res));\n    }\n\n    render() { \n        //let description = this.props.match.params.description;\n        return ( \n            <>\n                <Header />\n                <nav className=\"navbar bg-white\">\n                    <span className=\"mb-0 h5 text-primary\">Course Review</span>\n                </nav>\n                    <div className=\"row text-dark\" key={this.courseID}>\n                        {/*<h1 className=\"text-dark\"></h1>*/}\n                        {/*<h4>- {this.courseID}</h4>*/}\n                        <div className=\"col-6\">\n                            <br/>\n                            {/*<h6 className=\"text-muted\">Course #: {this.courseID}</h6>*/}\n                        </div>\n                    </div>\n\n                {\n                        this.state.reviews && ( <>\n                            <CommentList reviews={this.state.reviews} />\n                            <br/>\n                            <ForumCommentForm onReviewAdded={reviews => {\n                                this.setState(x => {\n                                    //this.setState({reviews: x.reviews})\n                                    x.reviews.data.push(reviews.data[reviews.length - 1]);\n                                    console.log(x.reviews)\n                                    return x.reviews;\n                                });\n\n                                console.log('hi')\n                                console.log(reviews.data[0,0])\n\n                                //addClassComment(userID, courseID, title, body){\n                                this.commentRepo.addClassComment(this.state.userID, this.courseID, reviews.data[0], this.state.reviews.body);\n                                    }}/>\n                                </>)\n                            }\n                        </>\n                    );\n                }\n\n\n}\n \nexport default CourseAndComments;","import React from \"react\";\n//import { Redirect } from 'react-router-dom'\nimport { AssignmentRepository } from '../Api/assignmentRepository';\nimport { Header } from './Header';\nimport {Assignment} from '../models/Assignment';\n\nexport class AssignmentAdder extends React.Component{\n  \n    api = new AssignmentRepository();\n    assignment = new Assignment();\n\n   \n    constructor(){\n        super();\n        this.userID = localStorage['userID'];\n        this.state = {\n\n            courseID: ' ',\n            description: '',\n            courseDescription: '',\n            assignmentDescription: '',\n            dueDate: '',\n            name: '',\n            assignmentType: '',\n            userID: this.userID\n        }\n            \n        }\n\n        async createAssignment(){\n            const data = {\n              \n                //completionStatus: 0,\n                name: this.state.name,\n                description: this.state.assignmentDescription,\n                courseDescription: this.state.courseDescription,\n                dueDate: this.state.dueDate,\n                assignmentType: this.state.assignmentType}\n                this.api.createAssignment(this.state.userID, data);\n                await this.loadDash();\n        }\n\n        loadDash(){\n                this.props.history.push('/assignments');\n        }\n    \n\n\n    render() {\n        return(<>\n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">Add Assignment</span>\n            </nav>\n            <div className=\"p-5 container-fluid container-sm\">\n                <div className = \"card text-center w-50 mx-auto\">\n                <div className = \"jumbotron-fluid h-75 bg-primary text-white text-center\">\n                        <h4 className=\"p-4 card-title font-weight-bold\">Add Assignment</h4>\n                    </div>\n                    <div className = \"form-group\">\n                    <div className = \"card-body\">\n                        <form>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"assignmentName\">Assignment Name</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Current Assignment Name\" onChange={e => this.setState({name: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"courseInput\">Course</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Current Course Name\" onChange={e => this.setState({courseDescription: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"dateInput\">Due Date</label>\n                                    <input type=\"date\" className=\"form-control\" placeholder=\"Current Due Date\" onChange={e => this.setState({dueDate: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col text-left\">\n                                    <label htmlFor=\"descriptionInput\">Description</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Assignment Description\" onChange={e => this.setState({assignmentDescription: e.target.value})}/>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                            <div className = \"form-group\">\n                            <label htmlFor=\"AssignmentType\">Assignment Type </label>\n                              <select id = \"AssignmentType\" onChange={e => this.setState({assignmentType: e.target.value})}>\n                              <option value = \"-1\" defaultValue>Choose...</option>\n                                <option value = \"Exam\">Exam</option>    \n                                <option value = \"Quiz\">Quiz</option>    \n                                <option value = \"Paper\">Paper</option>   \n                                <option value = \"Homework\">Homework</option>\n                                <option value = \"Project\">Project</option> \n                               \n                               </select>\n                               </div>\n                            </div>\n                        </form>\n                    </div>\n                \n                    <div className=\"footer\">\n                        <div className =\"p-3 btn-group\" role=\"group\">\n                            <button className=\"btn btn-primary btn-md btn-primary\" onClick={() => this.props.history.push(\"/assignments\")}>Cancel</button>\n                        </div>\n                        <div className =\"p-3 btn-group\" role=\"group\" >\n                            <button type=\"button\" className=\"btn btn-primary btn-md btn-primary\" onClick={e => this.createAssignment()}>Add</button>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </>\n        )}\n}","import React from \"react\";\nimport _ from 'lodash';\nimport { ClassesRepository} from '../Api/classesRepository';\nimport { Header } from './Header';\n\nexport class CourseSearchResults extends React.Component{\n\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            courses: this.props.location.state.courses,\n            sortDirection: 'asc',\n        };\n\n        this.courseRepo = new ClassesRepository();\n        this.formatDate = this.formatDate.bind(this);\n        this.formatTime = this.formatTime.bind(this);\n        this.formatSemester = this.formatSemester.bind(this);\n\n    }//end state\n\n    sortBy(field) {\n        if (this.state.sortDirection === 'asc') {\n            this.setState({sortDirection: 'desc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n        if (this.state.sortDirection === 'desc') {\n            this.setState({sortDirection: 'asc'})\n            this.setState({courses: _.orderBy(this.state.courses, field, this.state.sortDirection)\n            });\n        }\n    }\n\n    formatSemester(semester, year){\n        if(semester === 1){\n            return 'Fall ' + String(year);\n        }\n\n        if(semester === 2){\n            return 'Spring ' + String(year);\n        }\n    }\n\n    formatTime(myTime){\n        var timeValue;\n        var time = String(myTime);\n        time = time.split(':');\n\n        var hours = Number(time[0]);\n        var minutes = Number(time[1]);\n\n        if (hours > 0 && hours <= 12) timeValue= \"\" + hours;\n        else if (hours > 12) timeValue= \"\" + (hours - 12);\n        else if (hours === 0) timeValue= \"12\";\n\n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;\n        timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n\n        return timeValue;\n    }\n\n    formatDate(myDate){\n        var date = String(myDate);\n        if(date === 'null'){\n            return '-';\n        }\n\n        var properDate =  date.substring(5,7) + \"-\" + date.substring(8,10) + \"-\" + date.substring(0,4); \n        return properDate;\n    }\n\n\n    render() {\n        return(<>\n            \n            <Header />\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary \">Course Search Results</span>\n            </nav>\n\n            <div className = \"container-fluid container-lg\" id=\"content\">\n            <div className = \"text-center mx-auto\">\n                \n                <div className=\"p-3 container\">\n                    <h2 className = \" p-3 text-center text-dark\">Courses Offered</h2>\n                <table className=\"table table-striped table-bordered\">\n                    <thead className = \"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Course ID</th>\n                            <th scope=\"col\">Course Name</th>\n                            <th scope=\"col\">Offered Term</th>\n                            <th scope=\"col\">Professor</th>\n                            <th scope=\"col\">Start Time</th>\n                            <th scope=\"col\">End Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { this.state.courses.map((x) =>\n                        <tr key = {x.courseID}>\n                            <td>{x.courseID}</td>\n                            <td>{x.description}</td>\n                            <td>{this.formatSemester(x.seasonOffered,x.yearOffered)}</td>\n                            <td>{x.instructor}</td>\n                            <td>{this.formatTime(x.courseTimeStart)}</td>\n                            <td>{this.formatTime(x.courseTimeEnd)}</td>\n                        </tr>\n                    )}\n                    {/*\n                        <tr>\n                            <td>ASIM 1310</td>\n                            <td>Creative Coding 1</td>\n                            <td>MWF</td>\n                            <td>James Burns</td>\n                            <td>10:00 AM</td>\n                            <td>10:50 AM</td>\n                        </tr>\n                    */}\n                    </tbody>\n                </table>\n                <div className =\"p-3 btn-group\" role=\"group\">\n                    <button className=\"btn btn-primary btn-md btn-primary\" onClick={() => this.props.history.push(\"/courses/search\")}>Cancel</button>\n                </div>\n            </div>\n            </div>\n            </div>\n          </>\n        )\n      }\n}//end CourseList","import React from 'react';\n\n\nexport class AboutUs extends React.Component {\n\n\n    render(){\n        return(<>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n            <a href=\"/home\" className=\"mb-0 h4 text-white font-weight-bold\">Campus</a>\n            <a href=\"/home\" className=\"mb-0 h4 text-primary font-weight-bold\">Plus</a>\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\n                <form className=\"form-inline \">\n                    <button className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/login\")}>LOG OUT</button>\n                </form>\n            </div>\n            </nav>\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">About Us</span>\n            </nav>\n            <div className = \"p-5 container-fluid container-sm\">\n                <div className=\"card mb-1 w-75 mx-auto justify-content-center\">\n                    <div className = \"p-1 jumbotron jumbotron-fluid bg-white text-center\">\n                        <img src=\"/homeLogo.png\" className=\" img-fluid w-25 rounded mx-auto d-block\" alt=\"...\"/>  \n                    </div>\n                    <form className = \"justify-content-center p-1 text-primary text-center\">\n                        <h5 className = \"p-4 text-primary text-center\"> We are college students that worked to develop an \n                        application to improve the college experience. Our goal is to consolidate all of a student's assignments\n                         for each course in order to alleviate the stress that goes with school.</h5>\n                        <p>We hope you enjoy our product!</p>\n                    </form>\n                </div>\n            </div>\n        </>);\n    }\n}\n","import React from 'react';\n\n\nexport class GuestAboutUs extends React.Component {\n\n\n    render(){\n        return(<>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n            <a href=\"/guest\" className=\"mb-0 h4 text-white font-weight-bold\">Campus</a>\n            <a href=\"/guest\" className=\"mb-0 h4 text-primary font-weight-bold\">Plus</a>\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\n                <form className=\"form-inline \">\n                    <button className=\"btn btn-primary btn-sm rounded\" onClick={() => this.props.history.push(\"/login\")}>LOG OUT</button>\n                </form>\n            </div>\n            </nav>\n            <nav className=\"navbar bg-white\">\n                <span className=\"mb-0 h5 text-primary\">About Us</span>\n            </nav>\n            <div className = \"p-5 container-fluid container-sm\">\n                <div className=\"card mb-1 w-75 mx-auto justify-content-center\">\n                    <div className = \"p-1 jumbotron jumbotron-fluid bg-white text-center\">\n                        <img src=\"/homeLogo.png\" className=\" img-fluid w-25 rounded mx-auto d-block\" alt=\"...\"/>  \n                    </div>\n                    <form className = \"justify-content-center p-1 text-primary text-center\">\n                        <h5 className = \"p-4 text-primary text-center\"> We are college students that worked to develop an \n                        application to improve the college experience. Our goal is to consolidate all of a student's assignments\n                         for each course in order to alleviate the stress that goes with school.</h5>\n                        <p>We hope you enjoy our product!</p>\n                    </form>\n                </div>\n            </div>\n        </>);\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router,Route, Switch} from \"react-router-dom\";\nimport { AssignmentDashboard } from './app/AssignmentDashboard';\nimport { Register } from './app/login/Register';\nimport { WelcomePage } from './app/WelcomePage';\nimport { Profile } from './app/Profile';\nimport { EditProfile } from './app/EditProfile';\nimport { Home } from './app/Home';\nimport { Calendar } from './app/Calendar';\nimport { CourseDashboard } from './app/CourseDashboard';\nimport { AssignmentEditor } from './app/AssignmentEditor';\nimport { CourseSearch } from './app/CourseSearch';\nimport { ArchivedAssignments } from './app/ArchivedAssignments';\nimport { ArchivedCourses } from './app/ArchivedCourses';\nimport { CalendarDaily } from './app/CalendarDaily';\nimport { ViewCourse } from './app/ViewCourse';\nimport { GuestHome } from './app/GuestHome';\nimport { CourseList } from './app/CourseList';\nimport { ForumDashboard } from './app/ForumDashboard';\nimport { CourseAndComments } from './app/CourseAndComments';\nimport { AssignmentAdder } from './app/AddAssignments';\nimport { CourseSearchResults } from './app/CourseSearchResults';\nimport { AboutUs } from './app/AboutUs';\nimport { GuestAboutUs } from './app/GuestAboutUs';\n\nconst App = props => {\n  return(\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/CampusPlus/\" component={WelcomePage} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/profile/edit\" component={EditProfile} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/assignments\" component={AssignmentDashboard} />\n          <Route exact path=\"/calendar\" component={Calendar} />\n          <Route exact path=\"/courses\" component={CourseDashboard}/>\n          <Route exact path=\"/login\" component={WelcomePage} />\n          <Route exact path=\"/assignment/:assignmentID\" component={AssignmentEditor} />\n          <Route exact path=\"/courses/search\" component={CourseSearch} />\n          <Route exact path=\"/finished_assignments\" component={ArchivedAssignments} />\n          <Route exact path=\"/courses/completed\" component={ArchivedCourses} />\n          <Route exact path=\"/calendar/:day/:month/:year\" component={CalendarDaily} />\n          <Route exact path=\"/viewCourses\" component={ViewCourse} />\n          <Route exact path=\"/guest\" component={GuestHome} />\n          <Route exact path=\"/courselist\" component={CourseList} />\n          <Route exact path=\"/forum\" component={ForumDashboard} />\n          <Route exact path=\"/course_reviews/:courseID\" component={CourseAndComments} />\n          <Route exact path=\"/add\" component={AssignmentAdder} />\n          <Route exact path=\"/courses/search/results\" component={CourseSearchResults} />\n          <Route exact path=\"/guestAboutUs\" component={GuestAboutUs} />\n          <Route exact path=\"/aboutUs\" component={AboutUs} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}